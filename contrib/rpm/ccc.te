policy_module(ccc, 1.100.1)

########################################
#
# Declarations
#

type ccc_t;
type ccc_exec_t;
init_daemon_domain(ccc_t, ccc_exec_t)

permissive ccc_t;

type ccc_initrc_exec_t;
init_script_file(ccc_initrc_exec_t)

type ccc_conf_t;
files_type(ccc_conf_t)

type ccc_var_lib_t;
files_type(ccc_var_lib_t)

type ccc_var_run_t;
files_type(ccc_var_run_t)

type ccc_port_t;
corenet_port(ccc_port_t)

########################################
#
# ccc local policy
#
allow ccc_t self:process { fork };

allow ccc_t self:fifo_file rw_fifo_file_perms;
allow ccc_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(ccc_t, ccc_conf_t, ccc_conf_t)
manage_files_pattern(ccc_t, ccc_conf_t, ccc_conf_t)

manage_dirs_pattern(ccc_t, ccc_var_lib_t, ccc_var_lib_t)
manage_files_pattern(ccc_t, ccc_var_lib_t, ccc_var_lib_t)
files_var_lib_filetrans(ccc_t, ccc_var_lib_t, { dir file })

manage_dirs_pattern(ccc_t, ccc_var_run_t, ccc_var_run_t)
manage_files_pattern(ccc_t, ccc_var_run_t, ccc_var_run_t)

sysnet_dns_name_resolve(ccc_t)
corenet_all_recvfrom_unlabeled(ccc_t)

allow ccc_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(ccc_t)
corenet_tcp_sendrecv_generic_node(ccc_t)
corenet_tcp_sendrecv_all_ports(ccc_t)
corenet_tcp_bind_generic_node(ccc_t)

gen_require(`
    type ccc_port_t;
')
allow ccc_t ccc_port_t:tcp_socket name_bind;

gen_require(`
    type ccc_port_t;
')
allow ccc_t ccc_port_t:tcp_socket name_connect;

domain_use_interactive_fds(ccc_t)

files_read_etc_files(ccc_t)

miscfiles_read_localization(ccc_t)

sysnet_dns_name_resolve(ccc_t)

allow ccc_t ccc_exec_t:file execute_no_trans;
allow ccc_t self:process setsched;
corecmd_exec_ls(ccc_t)
corenet_tcp_connect_http_port(ccc_t)
dev_read_urand(ccc_t)
fs_getattr_xattr_fs(ccc_t)
kernel_read_system_state(ccc_t)
